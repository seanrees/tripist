package tripit

import "time"

type TripitResponse struct {
	Timestamp int64 `json:"timestamp,string"`
	NumBytes  int64 `json:"num_bytes,string"`
	Trip      []Trip
}

type Trip struct {
	Id                     string `json:"id"`
	LastModified           int64  `json:"last_modified,string"`
	StartDate              string `json:"start_date"`
	EndDate                string `json:"end_date"`
	DisplayName            string `json:"display_name"`
	ImageUrl               string `json:"image_url"`
	IsPrivate              bool   `json:"is_private,string"`
	IsTraveler             bool   `json:"is_traveler,string"`
	PrimaryLocation        string `json:"primary_location_address"`
	PrimaryLocationAddress Address
	TripInvitees           []Invitee
	TripPurposes           TripPurpose
}

func (t *Trip) Start() (time.Time, error) {
	return time.Parse(time.RFC3339, t.StartDate+"T00:00:00Z")
}
func (t *Trip) End() (time.Time, error) {
	return time.Parse(time.RFC3339, t.EndDate+"T00:00:00Z")
}

type Address struct {
	Address   string
	City      string
	State     string
	Country   string
	Latitude  float32 `json:",string"`
	Longitude float32 `json:",string"`
}

type Invitee struct {
	IsOwner    bool `json:"is_owner,string"`
	IsReadOnly bool `json:"is_read_only,string"`
	IsTraveler bool `json:"is_traveler,string"`
}

type TripPurpose struct {
	IsAutoGenerated bool   `json:"is_auto_generated,string"`
	PurposeTypeCode string `json:"purpose_type_code"`
}
